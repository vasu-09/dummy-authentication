spring:
  application:
    name: Authentication-Service

  profiles:
    # Let env decide; default to dev if nothing is set
    active: ${SPRING_PROFILES_ACTIVE:dev}

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: ${SPRING_JPA_SHOW_SQL:false}


server:
  port: ${SERVER_PORT:8092}

sms:
  base-url: ${SMS_BASE_URL}
  api-key: ${SMS_API_KEY}
  client-id: ${SMS_CLIENT_ID}
  sender-id: ${SMS_SENDER_ID}
  dlt:
    template-id: ${SMS_DLT_TEMPLATE_ID}
    content: ${SMS_DLT_CONTENT}
  otp:
    ttl-minutes: ${SMS_OTP_TTL_MINUTES:10}
    digits: ${SMS_OTP_DIGITS:6}
    per-minute-limit: ${SMS_OTP_PER_MINUTE_LIMIT:1}
    per-hour-limit: ${SMS_OTP_PER_HOUR_LIMIT:5}

jwt:
  secret-base64: ${JWT_SECRET_BASE64}           # REQUIRED: Base64 of 32/48/64 random bytes (HS256/384/512)
  previous-secret-base64: ${JWT_PREV_SECRET_BASE64:}  # optional; leave blank unless rotating
  issuer: ${JWT_ISSUER:moc-auth}                # string; must match what you require at parse time
  access-ttl-min: ${JWT_ACCESS_TTL_MIN:15}      # short-lived access token (minutes)
  refresh-ttl-days: ${JWT_REFRESH_TTL_DAYS:30}  # long-lived refresh token (days)
  kid: ${JWT_KID:}                              # optional; only if you want a key id in the JWT header

  jwt:
    alg: RS256
    issuer: ${JWT_ISSUER:http://auth-service:8092}       # set to your real base URL/host:port
    kid: ${JWT_KID::main-2025-08-16}                  # any stable ID for this key
    private-key-pem: ${JWT_PRIVATE_KEY_PEM} # full PKCS#8 PEM text via env var

    # optional rotation support (publish old public key alongside the new one)
    previous-kid: ${JWT_PREV_KID:}
    previous-public-pem: ${JWT_PREV_PUBLIC_PEM:}
    access-ttl-min: ${JWT_ACCESS_TTL_MIN:15}
    refresh-ttl-days: ${JWT_REFRESH_TTL_DAYS:30}

media:
  bucket: ${MEDIA_BUCKET:moc-prod}   # default "moc-prod", override via env var MEDIA_BUCKET

# (recommendedâ€”where to call RTC)
rtc:
  base-url: ${RTC_BASE_URL:http://rtc-service:8095}

# optional, nice-to-have knobs used by AvatarService
avatar:
  max-size-bytes: ${AVATAR_MAX_SIZE_BYTES:5242880}      # 5 MB
  put-url-ttl-seconds: ${AVATAR_PUT_TTL_SECONDS:600}
  get-url-ttl-seconds: ${AVATAR_GET_TTL_SECONDS:600}


# Keep this custom and read it in a @ConfigurationProperties or @Value
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,capacitor://localhost}
